{"version":3,"sources":["constants/routes.js","firebase/firebase.js","firebase/auth.js","components/SignOut.jsx","components/nav/Navigation.jsx","components/SignUp.jsx","components/SignIn.jsx","components/Dashboard.jsx","components/Account.jsx","components/LandingPage.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["ROOT","process","REGISTER","LOGIN","LANDING","DASHBOARD","ACCOUNT","PASSWORD_FORGET","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","SignOutButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","history","then","push","routes","react_default","a","createElement","href","onClick","Component","withRouter","CheckOpen","isOpen","open","onClickMenu","Fragment","Close_default","Menu_default","className","Navigation","handleClick","e","ReactDOM","findDOMNode","assertThisInitialized","contains","target","setState","handleOpen","event","value","state","document","addEventListener","removeEventListener","_this$props","authUser","concat","id","Navigation_NavigationAuth","Email","routePath","location","pathname","Navigation_NavigationNonAuth","React","NavigationAuth","_ref","Link","to","SignOut","NavigationNonAuth","_ref2","INITIAL_STATE","username","passwordOne","passwordTwo","error","byPropKey","propertyName","defineProperty","SignUpForm","onSubmit","_this$state","objectSpread","catch","preventDefault","_this2","_this$state2","isInvalid","onChange","type","placeholder","disabled","message","SignUpLink","SignUp_SignUpForm","SignInForm","SignIn","SignIn_SignInForm","SignUp_SignUpLink","Dashboard","Account","LandingPage","console","log","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","logStatus","Redirect","AuthRoutes","redirectLoggedIn","exact","path","App_PrivateRoute","SignUp","App","toggleOpen","speed","isLoggedIn","loading","onAuthStateChanged","style","textAlign","position","top","left","BrowserRouter","components_nav_Navigation","Boolean","window","hostname","match","src_components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9116bd22.chunk.js","sourcesContent":["export const ROOT = process.env.PUBLIC_URL+'/';\r\nexport const REGISTER = process.env.PUBLIC_URL+'/register';\r\nexport const LOGIN = process.env.PUBLIC_URL+'/login';\r\nexport const LANDING = process.env.PUBLIC_URL+'/home';\r\nexport const DASHBOARD = process.env.PUBLIC_URL+'/dashboard';\r\nexport const ACCOUNT = process.env.PUBLIC_URL+'/account';\r\nexport const PASSWORD_FORGET = process.env.PUBLIC_URL+'/pw-forget';","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyA701yk9dnepvJW7ttEHXH3PH_nOk0PBG4\",\r\n    authDomain: \"recipe-app-482c9.firebaseapp.com\",\r\n    databaseURL: \"https://recipe-app-482c9.firebaseio.com\",\r\n    projectId: \"recipe-app-482c9\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"621777142063\"\r\n}\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n}\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport {\r\n  auth,\r\n};","import { auth } from './firebase';\r\n\r\n// Sign Up\r\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\r\n  auth.createUserWithEmailAndPassword(email, password);\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = (email, password) =>\r\n  auth.signInWithEmailAndPassword(email, password);\r\n\r\n// Sign out\r\nexport const doSignOut = () =>\r\n    auth.signOut();\r\n\r\n// Password Reset\r\nexport const doPasswordReset = (email) =>\r\n  auth.sendPasswordResetEmail(email);\r\n\r\n// Password Change\r\nexport const doPasswordUpdate = (password) =>\r\n  auth.currentUser.updatePassword(password);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as routes from '../constants/routes';\r\nimport { auth } from '../firebase';\r\n\r\nclass SignOutButton extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  logout = () =>{\r\n    const { history,} = this.props;\r\n    auth.doSignOut().then(() =>{\r\n      history.push(routes.LOGIN);\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <a\r\n        href=\"#\"\r\n        onClick={this.logout}\r\n      >\r\n        Sign Out\r\n      </a>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignOutButton);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router'\r\n\r\n\r\nimport SignOutButton from '../SignOut.jsx';\r\nimport * as routes from '../../constants/routes';\r\nimport './Navigation.scss'\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport Close from '@material-ui/icons/Close'\r\n\r\n// const Navigation = ({ authUser }) =>\r\n//   <div>\r\n//     <ul>\r\n//       <li><Link to={routes.DASHBOARD}>Home</Link></li>\r\n//       <li><Link to={routes.LOGIN}>Sign In</Link></li>\r\n//       <li><Link to={routes.REGISTER}>Sign Up</Link></li>\r\n//       <li><Link to={routes.ACCOUNT}>Account</Link></li>\r\n//       <li><SignOutButton /></li>\r\n//     </ul>\r\n//   </div>\r\n\r\n// const Navigation = ({ authUser }) =>\r\n//   <div>\r\n//     { authUser\r\n//         ? <NavigationAuth Email={authUser.email}/>\r\n//         : <NavigationNonAuth />\r\n//     }\r\n//   </div>\r\n\r\nfunction CheckOpen(props){\r\n  const isOpen = props.open\r\n  const onClickMenu = props.onClickMenu\r\n  let el;\r\n  if( isOpen ){\r\n    el =  <React.Fragment>\r\n            <Close onClick={onClickMenu}/>\r\n          </React.Fragment>\r\n  }else{\r\n    el =  <React.Fragment>\r\n            <Menu className=\"pointer\" onClick={onClickMenu}/>\r\n          </React.Fragment>\r\n  }\r\n  return el;\r\n}\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    // add event listener for clicks\r\n    document.addEventListener('click', this.handleClick, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // make sure you remove the listener when the component is destroyed\r\n    document.removeEventListener('click', this.handleClick, false);\r\n  }\r\n\r\n  // fat arrow function binds 'this' to class when called by the listener\r\n  // otherwise you'd need 'this.handleClick.bind(this)' in the constructor\r\n  handleClick = e => {\r\n    // this is the key part - ReactDOM.findDOMNode(this) gives you a reference\r\n    // to your CalendarPopup component;\r\n    // e.target is the element which was clicked upon.\r\n    // check whether the element clicked upon is in your component - if not,\r\n    // then call the close logic\r\n    if(!ReactDOM.findDOMNode(this).contains(e.target)) {\r\n      // the click was outside your component, so handle closing here\r\n      this.setState({ \r\n        isOpen: false\r\n      });\r\n    }else{\r\n      this.setState({ \r\n        isOpen: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOpen = (event, value) => {\r\n    this.setState({ \r\n      isOpen: !this.state.isOpen\r\n     });\r\n  };\r\n\r\n  render() {\r\n    const { authUser, onClickMenu } = this.props\r\n    const { isOpen } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={ `${isOpen ? 'dark' : ''}`}></div>\r\n        <div className={`side-menu ${isOpen ? 'active-side-menu' : ''} `}>\r\n            <ul>\r\n              <li>About</li>\r\n            </ul>\r\n          </div>\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <CheckOpen open={isOpen} onClickMenu={this.handleOpen}/>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            { authUser\r\n              ? <NavigationAuth Email={authUser.email} routePath={this.props.location.pathname}/>\r\n              : <NavigationNonAuth routePath={this.props.location.pathname}/>\r\n            }\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n// const NavigationAuth = ({ Email }) =>\r\n//   // <ul>\r\n//   //   <li><Link to={routes.DASHBOARD}>Home</Link></li>\r\n//   //   <li><Link to={routes.ACCOUNT}>Account</Link></li>\r\n//   //   <li><SignOutButton /></li>\r\n//   //   <li>Hello {Email}</li>\r\n//   // </ul>\r\n  \r\nconst NavigationAuth = ({ Email, routePath }) =>\r\n  <ul className=\"navbar-nav\">\r\n    <li className=\"nav-item\">\r\n      <Link className={`navbar-link ${routePath == routes.DASHBOARD ? 'activeLink' : ''}`} to={routes.DASHBOARD}>Dashboard</Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <Link className={`navbar-link ${routePath == routes.ACCOUNT ? 'activeLink' : ''}`} to={routes.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n\r\nconst NavigationNonAuth = ({ routePath }) =>\r\n  <ul className=\"navbar-nav\">\r\n    <li className=\"nav-item\"><Link className={`navbar-link ${routePath == routes.LANDING ? 'activeLink' : ''}`} to={routes.LANDING}>Home</Link></li>\r\n    <li className=\"nav-item\"><Link className={`navbar-link ${routePath == routes.LOGIN ? 'activeLink' : ''}`} to={routes.LOGIN}>Log in</Link></li>\r\n    <li className=\"nav-item\"><Link className={`navbar-link ${routePath == routes.REGISTER ? 'activeLink' : ''}`} to={routes.REGISTER}>Register</Link></li>\r\n  </ul>\r\n\r\nexport default withRouter(Navigation);","import React, { Component } from 'react';\r\nimport { Link,withRouter } from 'react-router-dom';\r\n\r\nimport * as routes from '../constants/routes';\r\n\r\nimport { auth } from '../firebase';\r\n\r\n\r\nconst SignUpPage = ({ history }) =>\r\n  <div className=\"text-center content-to-middle\">\r\n    <h1>Register</h1>\r\n    <SignUpForm history={history} />\r\n  </div>\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\nclass SignUpForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const {\r\n        username,\r\n        email,\r\n        passwordOne,\r\n    } = this.state;\r\n\r\n    const {\r\n        history,\r\n    } = this.props;\r\n\r\n    auth.doCreateUserWithEmailAndPassword(email, passwordOne)\r\n    .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        history.push(routes.DASHBOARD);\r\n    })\r\n    .catch(error => {\r\n        this.setState(byPropKey('error', error));\r\n    });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        username,\r\n        email,\r\n        passwordOne,\r\n        passwordTwo,\r\n        error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n    \r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"col-12 my-form m-auto\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={username}\r\n            onChange={event => this.setState(byPropKey('username', event.target.value))}\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={email}\r\n            onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={passwordOne}\r\n            onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={passwordTwo}\r\n            onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <button disabled={isInvalid} type=\"submit\" className=\"btn submit-btn\">\r\n          Sign Up\r\n        </button>\r\n\r\n        { error && <p>{error.message}</p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () =>\r\n  <p>\r\n    Don't have an account?\r\n    {' '}\r\n    <Link to={routes.REGISTER}>Register</Link>\r\n  </p>\r\n\r\nexport default withRouter(SignUpPage);\r\n\r\nexport {\r\n  SignUpForm,\r\n  SignUpLink,\r\n};","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { SignUpLink } from './SignUp';\r\nimport { auth } from '../firebase';\r\nimport * as routes from '../constants/routes';\r\n\r\nconst SignInPage = ({ history }) =>\r\n  <div className=\"text-center content-to-middle\">\r\n    <h1>Log in</h1>\r\n    <SignInForm history={history} />\r\n    <SignUpLink />\r\n  </div>\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n  [propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const {\r\n      email,\r\n      password,\r\n    } = this.state;\r\n\r\n    const {\r\n      history,\r\n    } = this.props;\r\n\r\n    auth.doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        history.push(routes.DASHBOARD);\r\n      })\r\n      .catch(error => {\r\n        this.setState(byPropKey('error', error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      password === '' ||\r\n      email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"col-12 my-form m-auto\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={email}\r\n            onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={password}\r\n            onChange={event => this.setState(byPropKey('password', event.target.value))}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <button disabled={isInvalid} type=\"submit\" className=\"btn submit-btn\">\r\n          Sign In\r\n        </button>\r\n\r\n        { error && <p>{error.message}</p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignInPage);\r\n\r\nexport {\r\n  SignInForm,\r\n};","import React, { Component } from 'react';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h2>Dashboard</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport * as routes from '../constants/routes';\r\n\r\nclass Account extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h2>My Account</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Account);","import React from 'react';\r\n\r\nconst LandingPage = () =>\r\n  <div className=\"col-12 text-center\">\r\n    <h1>Welcome to our site!</h1>\r\n  </div>\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\nimport './App.scss';\n// import * as firebase from 'firebase';\nimport { BrowserRouter as Router, Route, Link,Redirect } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport Navigation from './nav/Navigation.jsx';\nimport SignIn from './SignIn.jsx';\nimport SignUp from './SignUp.jsx';\nimport Dashboard from './Dashboard.jsx';\nimport Account from './Account.jsx';\nimport LandingPage from './LandingPage.jsx';\nimport { firebase } from '../firebase';\nimport * as routes from '../constants/routes';\nconsole.log(routes)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  //console.log(rest)\n  <Route {...rest} render={props => (\n    rest.logStatus === true\n    ? <Component {...props} />\n    : <Redirect to='/login' />\n  )} />\n)\n\nfunction AuthRoutes(props){\n  const authUser = props.authUser;\n  let routes_el,redirectLoggedIn;\n  if(props.logStatus){\n    redirectLoggedIn = \n                    <React.Fragment>\n                      <Route exact path={routes.LOGIN} render={() => (\n                        <Redirect to={routes.DASHBOARD}/> \n                      )}/>\n                      <Route exact path={routes.REGISTER} render={() => (\n                        <Redirect to={routes.DASHBOARD}/> \n                      )}/> \n                    </React.Fragment>\n  }\n  routes_el = <React.Fragment>\n                <PrivateRoute\n                  exact path={routes.DASHBOARD}\n                  component={Dashboard}\n                  logStatus={props.logStatus}\n                />\n                <PrivateRoute\n                  exact path={routes.ACCOUNT}\n                  component={Account}\n                  logStatus={props.logStatus}\n                />\n                {redirectLoggedIn}\n                <Route\n                  exact path={routes.LOGIN}\n                  component={SignIn}\n                />\n                <Route\n                  exact path={routes.REGISTER}\n                  component={SignUp}\n                />\n            </React.Fragment>         \n  return routes_el;\n}\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      speed: 10,\n      authUser: null,\n      isOpen: false,\n      isLoggedIn: false,\n      loading: true\n    }\n  }\n\n  toggleOpen = () => {\n    this.setState({ \n      isOpen: !this.state.isOpen\n    });\n  }\n\n  \n  \n  componentDidMount(){\n    // const speedRef = firebase.database().ref().child('speed');\n    // // this.setState({ speed: 20});\n    // // speedRef.set({\n    // //   speed: this.state.speed\n    // // })\n    // speedRef.on('value', snap => {\n    //   this.setState({\n    //     speed: snap.val()\n    //   })\n    // });\n    this.setState({ loading: true });\n    firebase.auth.onAuthStateChanged(authUser => {\n      authUser\n        ? this.setState({ \n            authUser: authUser,\n            isLoggedIn: true,\n            loading: false\n          })\n        : this.setState({ \n          authUser: null,\n          isLoggedIn: false,\n          loading: false\n        })\n    });\n  }\n\n  render() {\n    const { authUser } = this.state\n    if( this.state.loading){\n      return (<div style={{textAlign: \"center\",position: \"absolute\",top: \"25%\",left: \"50%\"}}>\n              <h3>Loading</h3>\n            </div>);\n    }else{\n\n      return (\n        <Router>\n          <div className=\"container-fluid my-pad\">\n            <Navigation authUser={authUser} onClickMenu={this.toggleOpen}/>\n\n            <AuthRoutes logStatus={this.state.isLoggedIn}/>\n\n            {/* redirect / to home */}\n            <Route exact path={routes.ROOT} render={() => (\n              <Redirect to={routes.LANDING}/> \n            )}/>\n            <Route\n              exact path={routes.LANDING}\n              component={LandingPage}\n            />\n          </div>\n        </Router>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n// import * as firebase from 'firebase';\n// import {DB_CONFIG} from './config';\n\n// firebase.initializeApp(DB_CONFIG);\n\nReactDOM.render(\n    <App/>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}