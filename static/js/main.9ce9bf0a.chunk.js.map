{"version":3,"sources":["firebase/firebase.js","firebase/auth.js","components/SignOut.jsx","constants/routes.js","components/nav/Navigation.jsx","components/SignUp.jsx","components/SignIn.jsx","components/Home.jsx","components/Account.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","SignOutButton","react_default","a","createElement","href","onClick","SIGN_IN","HOME","CheckOpen","props","isOpen","open","onClickMenu","Fragment","Close_default","Menu_default","className","Navigation","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","ReactDOM","findDOMNode","assertThisInitialized","contains","target","setState","handleOpen","event","value","state","console","log","document","addEventListener","removeEventListener","_this$props","authUser","concat","id","Navigation_NavigationAuth","Email","routePath","location","pathname","Navigation_NavigationNonAuth","React","Component","NavigationAuth","_ref","Link","to","routes","SignOut","NavigationNonAuth","_ref2","withRouter","INITIAL_STATE","username","passwordOne","passwordTwo","error","byPropKey","propertyName","defineProperty","SignUpForm","onSubmit","_this$state","history","then","objectSpread","push","catch","preventDefault","_this2","_this$state2","isInvalid","onChange","type","placeholder","disabled","message","SignUpLink","SignUp_SignUpForm","SignInForm","SignIn","SignIn_SignInForm","SignUp_SignUpLink","Home","Account","App","toggleOpen","speed","onAuthStateChanged","BrowserRouter","components_nav_Navigation","Route","exact","path","component","SignUp","Boolean","window","hostname","match","render","src_components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ce9bf0a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyA701yk9dnepvJW7ttEHXH3PH_nOk0PBG4\",\r\n    authDomain: \"recipe-app-482c9.firebaseapp.com\",\r\n    databaseURL: \"https://recipe-app-482c9.firebaseio.com\",\r\n    projectId: \"recipe-app-482c9\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"621777142063\"\r\n}\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n}\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport {\r\n  auth,\r\n};","import { auth } from './firebase';\r\n\r\n// Sign Up\r\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\r\n  auth.createUserWithEmailAndPassword(email, password);\r\n\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = (email, password) =>\r\n  auth.signInWithEmailAndPassword(email, password);\r\n\r\n// Sign out\r\nexport const doSignOut = () =>\r\n    auth.signOut();\r\n\r\n// Password Reset\r\nexport const doPasswordReset = (email) =>\r\n  auth.sendPasswordResetEmail(email);\r\n\r\n// Password Change\r\nexport const doPasswordUpdate = (password) =>\r\n  auth.currentUser.updatePassword(password);","import React from 'react';\r\n\r\nimport { auth } from '../firebase';\r\n\r\nconst SignOutButton = () =>\r\n  <a\r\n    href=\"#\"\r\n    onClick={auth.doSignOut}\r\n  >\r\n    Sign Out\r\n  </a>\r\n\r\nexport default SignOutButton;","export const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\n// export const LANDING = '/';\r\n// export const HOME = '/home';\r\nexport const HOME = '/'\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router'\r\n\r\n\r\nimport SignOutButton from '../SignOut.jsx';\r\nimport * as routes from '../../constants/routes';\r\nimport './Navigation.scss'\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport Close from '@material-ui/icons/Close'\r\n\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import Divider from '@material-ui/core/Divider';\r\n// import InboxIcon from '@material-ui/icons/Inbox';\r\n// import DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\n// import BottomNavigation from '@material-ui/core/BottomNavigation';\r\n// import BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n// import RestoreIcon from '@material-ui/icons/Restore';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\n// const Navigation = ({ authUser }) =>\r\n//   <div>\r\n//     <ul>\r\n//       <li><Link to={routes.HOME}>Home</Link></li>\r\n//       <li><Link to={routes.SIGN_IN}>Sign In</Link></li>\r\n//       <li><Link to={routes.SIGN_UP}>Sign Up</Link></li>\r\n//       <li><Link to={routes.ACCOUNT}>Account</Link></li>\r\n//       <li><SignOutButton /></li>\r\n//     </ul>\r\n//   </div>\r\n\r\n// const Navigation = ({ authUser }) =>\r\n//   <div>\r\n//     { authUser\r\n//         ? <NavigationAuth Email={authUser.email}/>\r\n//         : <NavigationNonAuth />\r\n//     }\r\n//   </div>\r\n\r\nfunction CheckOpen(props){\r\n  const isOpen = props.open\r\n  const onClickMenu = props.onClickMenu\r\n  let el;\r\n  if( isOpen ){\r\n    el =  <React.Fragment>\r\n            <Close onClick={onClickMenu}/>\r\n          </React.Fragment>\r\n  }else{\r\n    el =  <React.Fragment>\r\n            <Menu className=\"pointer\" onClick={onClickMenu}/>\r\n          </React.Fragment>\r\n  }\r\n  return el;\r\n}\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    console.log(this.props)\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    // add event listener for clicks\r\n    document.addEventListener('click', this.handleClick, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // make sure you remove the listener when the component is destroyed\r\n    document.removeEventListener('click', this.handleClick, false);\r\n  }\r\n\r\n  // fat arrow function binds 'this' to class when called by the listener\r\n  // otherwise you'd need 'this.handleClick.bind(this)' in the constructor\r\n  handleClick = e => {\r\n    // this is the key part - ReactDOM.findDOMNode(this) gives you a reference\r\n    // to your CalendarPopup component;\r\n    // e.target is the element which was clicked upon.\r\n    // check whether the element clicked upon is in your component - if not,\r\n    // then call the close logic\r\n    if(!ReactDOM.findDOMNode(this).contains(e.target)) {\r\n      // the click was outside your component, so handle closing here\r\n      this.setState({ \r\n        isOpen: false\r\n      });\r\n    }else{\r\n      this.setState({ \r\n        isOpen: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOpen = (event, value) => {\r\n    this.setState({ \r\n      isOpen: !this.state.isOpen\r\n     });\r\n  };\r\n\r\n  render() {\r\n    const { authUser, onClickMenu } = this.props\r\n    const { isOpen } = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <div className={ `${isOpen ? 'dark' : ''}`}></div>\r\n        <div className={`side-menu ${isOpen ? 'active-side-menu' : ''} `}>\r\n            <ul>\r\n              <li>About</li>\r\n            </ul>\r\n          </div>\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <CheckOpen open={isOpen} onClickMenu={this.handleOpen}/>\r\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button> */}\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            { authUser\r\n              ? <NavigationAuth Email={authUser.email} routePath={this.props.location.pathname}/>\r\n              : <NavigationNonAuth routePath={this.props.location.pathname}/>\r\n            }\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// class NavigationAuth extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n\r\n//     this.state = {\r\n//       isOpen: false\r\n//     }\r\n//   }\r\n\r\n//   handleOpen = (event, value) => {\r\n//     this.setState({ \r\n//       isOpen: !this.state.isOpen\r\n//      });\r\n//   };\r\n//   render() {\r\n//     const { classes } = this.props;\r\n//     const { isOpen } = this.state;\r\n\r\n//     return (\r\n//       // <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n//       //   <div className=\"navbar-brand\">\r\n//       //     <div className=\"navbar-item\">\r\n//       //       <h2>Menu:</h2>\r\n//       //     </div>\r\n//       //     <a onClick={this.handleOpen} role=\"button\" className={`navbar-burger ${isOpen ? 'is-active' : ''} `} aria-label=\"menu\" aria-expanded=\"false\">\r\n//       //       <span aria-hidden=\"true\"></span>\r\n//       //       <span aria-hidden=\"true\"></span>\r\n//       //       <span aria-hidden=\"true\"></span>\r\n//       //     </a>\r\n//       //   </div>\r\n//       //   <div id=\"navbarBasicExample\" className={`navbar-menu ${isOpen ? 'is-active' : ''} `}>\r\n//       //     <div className=\"navbar-start\">\r\n//       //       <Link className=\"navbar-item\" to={routes.HOME}>Home</Link>\r\n//       //       <Link className=\"navbar-item\" to={routes.ACCOUNT}>Account</Link>\r\n//       //     </div>\r\n\r\n//       //     <div className=\"navbar-end\">\r\n//       //       <div className=\"navbar-item\">\r\n//       //         <SignOutButton />\r\n//       //       </div>\r\n//       //     </div>\r\n//       //   </div>\r\n//       // </nav>\r\n//       <React.Fragment>\r\n//         {isOpen ? <Close onClick={this.handleOpen}/> : <Menu onClick={this.handleOpen}/>}\r\n//         <div className={`side-menu ${isOpen ? 'active-side-menu' : ''} `}></div>\r\n//         <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n//           <a className=\"navbar-brand\" href=\"#\">Menu: </a>\r\n//           <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//             <span className=\"navbar-toggler-icon\"></span>\r\n//           </button>\r\n//           <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n//             <ul className=\"navbar-nav\">\r\n//               <li className=\"nav-item active\">\r\n//                 <Link className=\"navbar-link\" to={routes.HOME}>Home</Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link className=\"navbar-link\" to={routes.ACCOUNT}>Account</Link>\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n//         </nav>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n// const NavigationAuth = ({ Email }) =>\r\n//   // <ul>\r\n//   //   <li><Link to={routes.HOME}>Home</Link></li>\r\n//   //   <li><Link to={routes.ACCOUNT}>Account</Link></li>\r\n//   //   <li><SignOutButton /></li>\r\n//   //   <li>Hello {Email}</li>\r\n//   // </ul>\r\n  \r\nconst NavigationAuth = ({ Email, routePath }) =>\r\n  <ul className=\"navbar-nav\">\r\n    <li className=\"nav-item\">\r\n      <Link className={`navbar-link ${routePath == '/' ? 'activeLink' : ''}`} to={routes.HOME}>Home</Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <Link className={`navbar-link ${routePath == '/account' ? 'activeLink' : ''}`} to={routes.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n\r\nconst NavigationNonAuth = ({ routePath }) =>\r\n  <ul className=\"navbar-nav\">\r\n    <li className=\"nav-item\"><Link className={`navbar-link ${routePath == '/signin' ? 'activeLink' : ''}`} to={routes.SIGN_IN}>Sign In</Link></li>\r\n    <li className=\"nav-item\"><Link className={`navbar-link ${routePath == '/signup' ? 'activeLink' : ''}`} to={routes.SIGN_UP}>Sign Up</Link></li>\r\n  </ul>\r\n\r\nexport default withRouter(Navigation);","import React, { Component } from 'react';\r\nimport { Link,withRouter } from 'react-router-dom';\r\n\r\nimport * as routes from '../constants/routes';\r\n\r\nimport { auth } from '../firebase';\r\n\r\n\r\nconst SignUpPage = ({ history }) =>\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm history={history} />\r\n  </div>\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n});\r\n\r\nclass SignUpForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const {\r\n        username,\r\n        email,\r\n        passwordOne,\r\n    } = this.state;\r\n\r\n    const {\r\n        history,\r\n    } = this.props;\r\n\r\n    auth.doCreateUserWithEmailAndPassword(email, passwordOne)\r\n    .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        history.push(routes.SIGN_IN);\r\n    })\r\n    .catch(error => {\r\n        this.setState(byPropKey('error', error));\r\n    });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        username,\r\n        email,\r\n        passwordOne,\r\n        passwordTwo,\r\n        error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n    \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          value={username}\r\n          onChange={event => this.setState(byPropKey('username', event.target.value))}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          value={email}\r\n          onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          value={passwordOne}\r\n          onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          value={passwordTwo}\r\n          onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n\r\n        { error && <p>{error.message}</p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () =>\r\n  <p>\r\n    Don't have an account?\r\n    {' '}\r\n    <Link to={routes.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n\r\nexport default withRouter(SignUpPage);\r\n\r\nexport {\r\n  SignUpForm,\r\n  SignUpLink,\r\n};","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { SignUpLink } from './SignUp';\r\nimport { auth } from '../firebase';\r\nimport * as routes from '../constants/routes';\r\n\r\nconst SignInPage = ({ history }) =>\r\n  <div className=\"text-center content-to-middle\">\r\n    <h1>Sign In</h1>\r\n    <SignInForm history={history} />\r\n    <SignUpLink />\r\n  </div>\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n  [propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const {\r\n      email,\r\n      password,\r\n    } = this.state;\r\n\r\n    const {\r\n      history,\r\n    } = this.props;\r\n\r\n    auth.doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        history.push(routes.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState(byPropKey('error', error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      password === '' ||\r\n      email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"col-12 my-LogIn-form m-auto\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={email}\r\n            onChange={event => this.setState(byPropKey('email', event.target.value))}\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={password}\r\n            onChange={event => this.setState(byPropKey('password', event.target.value))}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <button disabled={isInvalid} type=\"submit\" className=\"btn submit-btn\">\r\n          Sign In\r\n        </button>\r\n\r\n        { error && <p>{error.message}</p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignInPage);\r\n\r\nexport {\r\n  SignInForm,\r\n};","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h2>Home page</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport * as routes from '../constants/routes';\r\n\r\nclass Account extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h2>My Account</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Account);","import React, { Component } from 'react';\nimport './App.scss';\n// import * as firebase from 'firebase';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Navigation from './nav/Navigation.jsx';\nimport SignIn from './SignIn.jsx';\nimport SignUp from './SignUp.jsx';\nimport Home from './Home.jsx';\nimport Account from './Account.jsx';\nimport { firebase } from '../firebase';\nimport * as routes from '../constants/routes';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      speed: 10,\n      authUser: null,\n      isOpen: false\n    }\n  }\n\n  toggleOpen = () => {\n    this.setState({ \n      isOpen: !this.state.isOpen\n    });\n  }\n\n  \n  \n  componentDidMount(){\n    // const speedRef = firebase.database().ref().child('speed');\n    // // this.setState({ speed: 20});\n    // // speedRef.set({\n    // //   speed: this.state.speed\n    // // })\n    // speedRef.on('value', snap => {\n    //   this.setState({\n    //     speed: snap.val()\n    //   })\n    // });\n\n    firebase.auth.onAuthStateChanged(authUser => {\n      authUser\n        ? this.setState({ authUser })\n        : this.setState({ authUser: null });\n    });\n  }\n\n  render() {\n    const { isOpen } = this.state\n    return (\n      <Router>\n        <div className=\"container-fluid my-pad\">\n          {/* <div className={`side-menu ${isOpen ? 'active-side-menu' : ''} `}>\n            <ul>\n              <li>About</li>\n            </ul>\n          </div> */}\n          <Navigation authUser={this.state.authUser} onClickMenu={this.toggleOpen}/>\n          <Route\n            exact path={routes.HOME}\n            component={Home}\n            className=\"spiros\"\n          />\n          <Route\n            exact path={routes.SIGN_IN}\n            component={SignIn}\n          />\n          <Route\n            exact path={routes.SIGN_UP}\n            component={SignUp}\n          />\n          <Route\n            exact path={routes.ACCOUNT}\n            component={Account}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n// import * as firebase from 'firebase';\n// import {DB_CONFIG} from './config';\n\n// firebase.initializeApp(DB_CONFIG);\n\nReactDOM.render(\n    <App/>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}